% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_junction_label_repel.R
\name{geom_junction_label_repel}
\alias{geom_junction_label_repel}
\title{Label junction curves}
\usage{
geom_junction_label_repel(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  parse = FALSE,
  ...,
  junction.orientation = "alternating",
  junction.y.max = 1,
  angle = 90,
  ncp = 15,
  box.padding = 0.25,
  label.padding = 0.25,
  point.padding = 1e-06,
  label.r = 0.15,
  label.size = 0.25,
  min.segment.length = 0,
  arrow = NULL,
  force = 1,
  force_pull = 1,
  max.time = 0.5,
  max.iter = 10000,
  max.overlaps = getOption("ggrepel.max.overlaps", default = 10),
  nudge_x = 0,
  nudge_y = 0,
  xlim = c(NA, NA),
  ylim = c(NA, NA),
  na.rm = FALSE,
  show.legend = NA,
  direction = c("both", "y", "x"),
  seed = NA,
  verbose = FALSE,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2]{aes}} or
\code{\link[ggplot2]{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), is combined with the default mapping at the top level of the
plot. You only need to supply \code{mapping} if there isn't a mapping
defined for the plot.}

\item{data}{A data frame. If specified, overrides the default data frame
defined at the top level of the plot.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{parse}{If TRUE, the labels will be parsed into expressions and
displayed as described in ?plotmath}

\item{...}{other arguments passed on to \code{\link[ggplot2]{layer}}. There are
  three types of arguments you can use here:

  \itemize{
    \item Aesthetics: to set an aesthetic to a fixed value, like
       \code{colour = "red"} or \code{size = 3}.
    \item Other arguments to the layer, for example you override the
      default \code{stat} associated with the layer.
    \item Other arguments passed on to the stat.
  }}

\item{junction.orientation}{\code{character()} one of "alternating", "top" or
"bottom", specifying where the junctions will be plotted with respect to
each transcript (\code{y}).}

\item{junction.y.max}{\code{double()} the max y-value of each junction curve. It
can be useful to adjust this parameter when junction curves overlap with
one another/other transcripts or extend beyond the plot margins.}

\item{angle}{A numeric value between 0 and 180,
    giving an amount to skew the control
    points of the curve.  Values less than 90 skew the curve towards
    the start point and values greater than 90 skew the curve
    towards the end point.}

\item{ncp}{The number of control points used to draw the curve.
    More control points creates a smoother curve.}

\item{box.padding}{Amount of padding around bounding box, as unit or number.
Defaults to 0.25. (Default unit is lines, but other units can be specified
by passing \code{unit(x, "units")}).}

\item{label.padding}{Amount of padding around label, as unit or number.
Defaults to 0.25. (Default unit is lines, but other units can be specified
by passing \code{unit(x, "units")}).}

\item{point.padding}{Amount of padding around labeled point, as unit or
number. Defaults to 0. (Default unit is lines, but other units can be
specified by passing \code{unit(x, "units")}).}

\item{label.r}{Radius of rounded corners, as unit or number. Defaults
to 0.15. (Default unit is lines, but other units can be specified by
passing \code{unit(x, "units")}).}

\item{label.size}{Size of label border, in mm.}

\item{min.segment.length}{Skip drawing segments shorter than this, as unit or
number. Defaults to 0.5. (Default unit is lines, but other units can be
specified by passing \code{unit(x, "units")}).}

\item{arrow}{specification for arrow heads, as created by \code{\link[grid]{arrow}}}

\item{force}{Force of repulsion between overlapping text labels. Defaults
to 1.}

\item{force_pull}{Force of attraction between a text label and its
corresponding data point. Defaults to 1.}

\item{max.time}{Maximum number of seconds to try to resolve overlaps.
Defaults to 0.5.}

\item{max.iter}{Maximum number of iterations to try to resolve overlaps.
Defaults to 10000.}

\item{max.overlaps}{Exclude text labels when they overlap too many other
things. For each text label, we count how many other text labels or other
data points it overlaps, and exclude the text label if it has too many overlaps.
Defaults to 10.}

\item{nudge_x, nudge_y}{Horizontal and vertical adjustments to nudge the
starting position of each text label. The units for \code{nudge_x} and
\code{nudge_y} are the same as for the data units on the x-axis and y-axis.}

\item{xlim, ylim}{Limits for the x and y axes. Text labels will be constrained
to these limits. By default, text labels are constrained to the entire plot
area.}

\item{na.rm}{If \code{FALSE} (the default), removes missing values with
a warning.  If \code{TRUE} silently removes missing values.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{direction}{"both", "x", or "y" -- direction in which to adjust position of labels}

\item{seed}{Random seed passed to \code{\link[base]{set.seed}}. Defaults to
\code{NA}, which means that \code{set.seed} will not be called.}

\item{verbose}{If \code{TRUE}, some diagnostics of the repel algorithm are printed}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2]{borders}}.}
}
\value{
the return value of a \verb{geom_*} function is not intended to be
directly handled by users. Therefore, \verb{geom_*} functions should never be
executed in isolation, rather used in combination with a
\code{ggplot2::ggplot()} call.
}
\description{
\code{geom_junction_label_repel()} labels junction curves at their midpoint using
\code{ggrepel::geom_label_repel()}. This can be useful to label and compare
junctions (plotted using \code{geom_junction()}) with metrics of their usage (e.g.
read counts or percent-spliced-in).
}
\details{
\code{geom_junction_label_repel()} requires the following \code{aes()}; \code{xstart},
\code{xend}, \code{y} (e.g. transcript name) and \code{label}. Under the hood,
\code{geom_junction_label_repel()} generates the same junction curves as
\code{geom_junction()} to obtain curve midpoints for labeling. Therefore, it is
important that users use the same input data and parameters that alter
junction curves (namely \code{junction.orientation}, \code{junction.y.max}, \code{angle},
\code{ncp}) for \code{geom_junction_label_repel()} that they have used for
\code{geom_junction()}.
}
\examples{
library(magrittr)
library(ggplot2)

# to illustrate the package's functionality
# ggtranscript includes example transcript annotation
sod1_annotation \%>\% head()

# as well as a set of example (unannotated) junctions
# originating from GTEx and downloaded via the Bioconductor package snapcount
sod1_junctions

# extract exons
sod1_exons <- sod1_annotation \%>\% dplyr::filter(
    type == "exon",
    transcript_name == "SOD1-201"
)
sod1_exons \%>\% head()

# add transcript_name to junctions for plotting
sod1_junctions <- sod1_junctions \%>\%
    dplyr::mutate(transcript_name = "SOD1-201")

# geom_junction_label_repel() can be used to label junctions
base <- sod1_exons \%>\%
    ggplot(aes(
        xstart = start,
        xend = end,
        y = transcript_name
    )) +
    geom_range() +
    geom_intron(
        data = to_intron(sod1_exons, "transcript_name")
    )

# this can be useful to label junctions with their counts
base +
    geom_junction(
        data = sod1_junctions,
        junction.y.max = 0.5
    ) +
    geom_junction_label_repel(
        data = sod1_junctions,
        aes(label = round(mean_count, 2)),
        junction.y.max = 0.5
    )
}
